/**
  * @file: Defines.hpp
  * @brief: File contains list of string represent c++ keywords
  * @author: Gowrishankar Saminathan <Saminatham.Gowrishankar@in.bosch.com>
  *
  * Copyright [2023-present] [Bosch Global Software Technologies]

  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at

  *     http://www.apache.org/licenses/LICENSE-2.0

  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */

#ifndef DEFINES_HPP_
#define DEFINES_HPP_

#include <string>

namespace PredefinedMockData {
const std::string comma = ",";
const std::string commaAndSpace = ", ";
const std::string semicolon = ";";
const std::string initialization = " = {}";
const std::string aSpace= " ";
const std::string tab = "    ";
const std::string openParentheses = "(";
const std::string closeParentheses = ")";
const std::string openBraces = "{";
const std::string closeBraces = "}";
const std::string angleBracketOpen = "<";
const std::string angleBracketClose = ">";
const std::string newLine = "\n";
const std::string singleLineCommentOut = "// ";
const std::string fileInfo = {"/*******************************************************************************\n* This mock file is generated by AutoDepMocker tool\n* Copyright information is left blank. Please add it according to your project\n*******************************************************************************/\n"};
const std::string ifndef = "#ifndef ";
const std::string define = "#define ";
const std::string endif = "#endif //";
const std::string include = "#include ";
const std::string nameSpace = "namespace ";
const std::string class_ = "class "; // _ to avoid redefining class syntax
const std::string public_ = "public:\n";
const std::string static_ = "static ";
const std::string getInstance = "* getInstance";
const std::string gmockFunctionName = "MOCK_METHOD";
const std::string gmockConstFunctionName = "MOCK_CONST_METHOD";
const std::string return_ = "return ";
const std::string thisPtr = "s_thisPtr";
const std::string pointer = "* ";
const std::string pointer_access = "->";
const std::string extern_ = "extern ";
const std::string template_ = "template ";
const std::string typename_ = "typename ";
const std::string enum_ = "enum ";
const std::string scopedEnum_ = "enum class ";
}

#endif // DEFINES_HPP_
